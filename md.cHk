import requests, sys, eyed3, shutil, random, os, getpass, base64, platform

def requestTitle() :
    title_i = raw_input("Title : ")
    if title_i.strip() == "" :
        print ""
        print "Invalid Input, Please Try Again"
        print ""
        return requestTitle()
    else : return title_i

def requestArtist() :
    artist_i = raw_input("Artist : ")
    if artist_i.strip() == "" :
        print ""
        print "Invalid Input, Please Try Again"
        print ""
        return requestArtist()
    else : return artist_i

def download(title, artist, download_location) :
    print "Searching..."
    response = requests.get(base64.b64decode("aHR0cDovLzEyM20uZXN5LmVzL211c2ljLnBocA=="), params={"title":title, "artist":artist}).json()
    
    data_artist = response["data"]["artists"]
    data_album = response["data"]["album_name"]
    data_album_artist = response["data"]["album_artist"]
    data_album_cover = response["data"]["album_cover"]
    data_title = response["data"]["name"]
    mp3_link = response["data"]["link"]
    if response["error"] != "" :
        print "Error : " + response["error"]
        print ""
        print ""
        return ""
    else : 
        check_file_h = requests.head(response["data"]["link"])
        if check_file_h.status_code != 200 :
            try :
                new_mp3_link_r = requests.get(base64.b64decode("aHR0cDovLzEyM211c2ljLnRvL2FqYXgvc29uZy9zb3VyY2VzLw==")+base64.b64decode(response["data"]["base_source"])).json()
                new_mp3_link = ""
                new_mp3_320_links = []
                new_mp3_128_links = []
                for new_mp3_sources in new_mp3_link_r["sources"] :
                    if isinstance(new_mp3_sources, dict) :
                        if new_mp3_sources["server"] == "zing_direct" or new_mp3_sources["server"] == "zing" :
                            if new_mp3_sources["link_320"] != "" :
                                new_mp3_link = new_mp3_sources["link_320"]
                                new_mp3_320_links.append(new_mp3_sources["link_320"])
                            if new_mp3_sources["link_128"] != "" :
                                new_mp3_link = new_mp3_sources["link_128"]
                                new_mp3_128_links.append(new_mp3_sources["link_128"])
                        else :
                            if new_mp3_sources["link_320"] != "" :
                                new_mp3_320_links.append(new_mp3_sources["link_320"])
                            if new_mp3_sources["link_128"] != "" :
                                new_mp3_128_links.append(new_mp3_sources["link_128"])
                if new_mp3_link == "" :
                    if len(new_mp3_320_links) > 0 :
                        new_mp3_link = new_mp3_320_links[0]
                    elif len(new_mp3_128_links) > 0 :
                        new_mp3_link = new_mp3_128_links[0]
                mp3_link = new_mp3_link
            except :
                print "An Unexpected Error Occured"
                print ""
                print ""
                return ""
        print 'Downloading...'
        title_formatted = ""
        album_artist_formatted = ""
        artists_formatted = ""
        for c in response["data"]["name"] :
            if c in " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!$%^&()-_=+[{]}#~'@;.,`]" : title_formatted = title_formatted + c
        for c in response["data"]["album_artist"] :
            if c in " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!$%^&()-_=+[{]}#~'@;.,`]" : album_artist_formatted = album_artist_formatted + c
        for c in response["data"]["artists"] :
            if c in " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!$%^&()-_=+[{]}#~'@;.,`]" : artists_formatted = artists_formatted + c
        if not os.path.exists(os.path.join(download_location)):
            os.makedirs(os.path.join(download_location))
        if not os.path.exists(os.path.join(download_location, album_artist_formatted)):
            os.makedirs(os.path.join(download_location, album_artist_formatted))
        if not os.path.exists(os.path.join(download_location, album_artist_formatted, title_formatted)):
            os.makedirs(os.path.join(download_location, album_artist_formatted, title_formatted))
        file_name = os.path.join(download_location, album_artist_formatted, title_formatted, title_formatted + ".mp3")
        with open(file_name, "wb") as f:
                response = requests.get(mp3_link, stream=True)
                total_length = response.headers.get('content-length')
                if total_length is None:
                    f.write(response.content)
                else:
                    dl = 0
                    total_length = int(total_length)
                    for data in response.iter_content(chunk_size=4096):
                        dl += len(data)
                        f.write(data)
                        done = int(50 * dl / total_length)
                        sys.stdout.write("\r[%s%s]" % ('=' * done, ' ' * (50-done)) )    
                        sys.stdout.flush()
        print ""
        print "Downloaded"
        print "Editing Tags..."
        try :
            audiofile = eyed3.load(file_name)
            audiofile.initTag()
            audiofile.tag.artist = data_artist
            audiofile.tag.album = data_album
            audiofile.tag.album_artist = data_album_artist
            audiofile.tag.title = data_title
            data_album_cover_temp_path = ''.join(random.choice('0123456789ABCDEF') for i in range(16))+".jpg"
            r = requests.get(data_album_cover, stream=True)
            if r.status_code == 200:
                with open(data_album_cover_temp_path, 'wb') as f:
                    r.raw.decode_content = True
                    shutil.copyfileobj(r.raw, f)
            imagedata = open(data_album_cover_temp_path,"rb").read()
            os.remove(data_album_cover_temp_path)
            audiofile.tag.images.set(3, imagedata, "image/jpeg", u"")
            audiofile.tag.save()
        except : print "Error while editing tags"
        print "Done!"
        print ""
        print ""
        return ""

def downloadLoop(download_location) :
    while True :
        title_i = requestTitle()
        artist_i = requestArtist()
        download(title_i, artist_i, download_location)

def start() :
    if platform.release() == "10" :
        import tkinter
        from tkinter import filedialog
        download_dir_not_chosen = True
        download_location = ""
        if os.path.isfile(os.path.join("C:\\", "Users", getpass.getuser(), "AppData", "Local", "Music Downloader", "ZG93bmxvYWQ.bG9jYXRpb24")) :
            download_location_file = open(os.path.join("C:\\", "Users", getpass.getuser(), "AppData", "Local", "Music Downloader", "ZG93bmxvYWQ.bG9jYXRpb24"), "r+")
            download_location = base64.b64decode(download_location_file.read())
            download_location_file.close()
            if not os.path.isdir(download_location) : download_location = ""
        else :
            if not os.path.isdir(os.path.join("C:\\", "Users", getpass.getuser(), "AppData", "Local", "Music Downloader")) :
                os.makedirs(os.path.join("C:\\", "Users", getpass.getuser(), "AppData", "Local", "Music Downloader"))
        if download_location == "" :
            print "Press enter to select download directory... (Only occurs on first run)"
            raw_input()
            while download_dir_not_chosen :
                root = tkinter.Tk().withdraw()
                download_location_ = filedialog.askdirectory()
                if os.path.isdir(download_location_) :
                    download_location = download_location_
                    download_location_file = open(os.path.join("C:\\", "Users", getpass.getuser(), "AppData", "Local", "Music Downloader", "ZG93bmxvYWQ.bG9jYXRpb24"), "w+")
                    download_location_file.write(base64.b64encode(download_location))
                    download_location_file.close()
                    os.system("cls")
                    download_dir_not_chosen = False
            if download_location != "" : downloadLoop(download_location)
        else : downloadLoop(download_location)
    else : downloadLoop(os.path.expanduser(os.path.join('~', "Music")))
start()




# PHP CODE :
#
#
#PD9waHANCmhlYWRlcignQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uJyk7DQpjbGFzcyBEYXRhIHsNCiAgcHVibGljICRuYW1lID0gIiI7DQogIHB1YmxpYyAkYXJ0aXN0cyA9ICIiOw0KICBwdWJsaWMgJGFsYnVtX25hbWUgPSAiIjsNCiAgcHVibGljICRhbGJ1bV9hcnRpc3QgPSAiIjsNCiAgcHVibGljICRhbGJ1bV9jb3ZlciA9ICIiOw0KICBwdWJsaWMgJGxpbmsgPSAiIjsNCiAgcHVibGljICRiYXNlX3NvdXJjZSA9ICIiOw0KfQ0KY2xhc3MgSlNPTiB7DQogIHB1YmxpYyAkZXJyb3IgPSAiIjsNCiAgcHVibGljICRkYXRhOw0KfQ0KJGpzb24gPSBuZXcgSlNPTigpOw0KDQppZiAoaXNzZXQoJF9HRVRbInRpdGxlIl0pIGFuZCBpc3NldCgkX0dFVFsiYXJ0aXN0Il0pKSB7DQogICRqc29uLT5kYXRhID0gbmV3IERhdGEoKTsNCiAgJGFydGlzdF9jb250YWluc19zcGVjaWFsX2NoYXJzID0gZmFsc2U7DQogIGZvcmVhY2ggKHN0cl9zcGxpdChzdHJ0b2xvd2VyKCRfR0VUWyJhcnRpc3QiXSkpIGFzICRjaGFyKSB7DQogICAgaWYgKHN0cnBvcygiYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5ICIsICRjaGFyKSA9PT0gZmFsc2UpIHsNCiAgICAgICRhcnRpc3RfY29udGFpbnNfc3BlY2lhbF9jaGFycyA9IHRydWU7DQogICAgICBicmVhazsNCiAgICB9DQogIH0NCiAgDQogICRhcnRpc3RfcGFnZXMgPSBbXTsNCiAgaWYgKCRhcnRpc3RfY29udGFpbnNfc3BlY2lhbF9jaGFycyA9PSBmYWxzZSkgew0KICAgICRhcnRpc3RzX3IgPSBmaWxlX2dldF9jb250ZW50cygiaHR0cDovLzEyM211c2ljLnRvL3NlYXJjaC9hcnRpc3RzLyIuc3RyX3JlcGxhY2UoIiAiLCAiKyIsICRfR0VUWyJhcnRpc3QiXSkuIi5odG1sIik7DQogICAgJGFydGlzdHMgPSBleHBsb2RlKCc8L3VsPicsIGV4cGxvZGUoJzx1bCBjbGFzcz0icGFnaW5hdGlvbiI+JywgJGFydGlzdHNfcilbMV0pWzBdOw0KICAgIGlmIChzdHJwb3MoJGFydGlzdHMsICciPkxhc3QnKSAhPT0gZmFsc2UpIHsNCiAgICAgICRhcnRpc3RzX3BhZ2VzX24gPSBleHBsb2RlKCciJywgZXhwbG9kZSgnIj5MYXN0JywgJGFydGlzdHMpWzBdKTsNCiAgICAgICRhcnRpc3RzX3BhZ2VzX24gPSAoaW50KWVuZCgkYXJ0aXN0c19wYWdlc19uKTsNCiAgICB9IGVsc2UgaWYgKHN0cnBvcygkYXJ0aXN0cywgJzxsaSBjbGFzcz0ibmV4dCI+JykgIT09IGZhbHNlKSB7DQogICAgICAkYXJ0aXN0c19wYWdlc19uID0gZXhwbG9kZSgnPGxpPjxhIGhyZWY9IicsIGV4cGxvZGUoJzxsaSBjbGFzcz0ibmV4dCI+JywgJGFydGlzdHMpWzBdKTsNCiAgICAgICRhcnRpc3RzX3BhZ2VzX24gPSAoaW50KWV4cGxvZGUoJzwvYT4nLCBleHBsb2RlKCciPicsIGVuZCgkYXJ0aXN0c19wYWdlc19uKSlbMV0pWzBdOw0KICAgIH0gZWxzZSB7DQogICAgICAkYXJ0aXN0c19wYWdlc19uID0gMTsNCiAgICB9DQogICAgaWYgKCRhcnRpc3RzX3BhZ2VzX24gPiA1KSB7DQogICAgICAkYXJ0aXN0c19wYWdlc19uID0gNTsNCiAgICB9DQogICAgDQogICAgZm9yZWFjaCAocmFuZ2UoMSwgJGFydGlzdHNfcGFnZXNfbikgYXMgJGFydGlzdHNfcGFnZV9uKSB7DQogICAgICAkYXJ0aXN0c19wYWdlX3IgPSBmaWxlX2dldF9jb250ZW50cygiaHR0cDovLzEyM211c2ljLnRvL3NlYXJjaC9hcnRpc3RzLyIuc3RyX3JlcGxhY2UoIiAiLCAiKyIsICRfR0VUWyJhcnRpc3QiXSkuIi9wYWdlLSIuJGFydGlzdHNfcGFnZV9uLiIuaHRtbCIpOw0KICAgICAgJGFydGlzdHNfcGFnZV9pdGVtcyA9IGV4cGxvZGUoJzxkaXYgY2xhc3M9Iml0ZW0iPicsIGV4cGxvZGUoJzxkaXYgaWQ9InBhZ2luYXRpb24iPicsIGV4cGxvZGUoJzxkaXYgY2xhc3M9InR5cGUtbGlzdCBhcnRpc3QtY2F0ZS1saXN0Ij4nLCAkYXJ0aXN0c19wYWdlX3IpWzFdKVswXSk7DQogICAgICBhcnJheV9zaGlmdCgkYXJ0aXN0c19wYWdlX2l0ZW1zKTsNCiAgICAgIGZvcmVhY2ggKCRhcnRpc3RzX3BhZ2VfaXRlbXMgYXMgJGFydGlzdHNfcGFnZV9pdGVtKSB7DQogICAgICAgICRhcnRpc3RzX3BhZ2VfaXRlbV9hcnRpc3QgPSBleHBsb2RlKCc8L2g0PicsIGV4cGxvZGUoJzxoND4nLCAkYXJ0aXN0c19wYWdlX2l0ZW0pWzFdKVswXTsNCiAgICAgICAgaWYgKHN0cnRvbG93ZXIoJGFydGlzdHNfcGFnZV9pdGVtX2FydGlzdCkgPT0gc3RydG9sb3dlcigkX0dFVFsnYXJ0aXN0J10pKSB7DQogICAgICAgICAgYXJyYXlfcHVzaCgkYXJ0aXN0X3BhZ2VzLCBleHBsb2RlKCciJywgZXhwbG9kZSgnPGEgaHJlZj0iJywgJGFydGlzdHNfcGFnZV9pdGVtKVsxXSlbMF0pOw0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KDQogICAgJGFydGlzdF9zb25nc19wYWdlcyA9IFtdOw0KICAgIGZvcmVhY2ggKCRhcnRpc3RfcGFnZXMgYXMgJGFydGlzdF9wYWdlKSB7DQogICAgICAkYXJ0aXN0X3NvbmdzX3IgPSBmaWxlX2dldF9jb250ZW50cyhleHBsb2RlKCcuaHRtbCcsICRhcnRpc3RfcGFnZSlbMF0uIi9zb25ncy9wYWdlLTEuaHRtbCIpOw0KICAgICAgJGFydGlzdF9zb25nc19uID0gZXhwbG9kZSgnPC91bD4nLCBleHBsb2RlKCc8dWwgY2xhc3M9InBhZ2luYXRpb24iPicsICRhcnRpc3Rfc29uZ3NfcilbMV0pWzBdOw0KICAgICAgaWYgKHN0cnBvcygkYXJ0aXN0X3NvbmdzX24sICciPkxhc3QnKSAhPT0gZmFsc2UpIHsNCiAgICAgICAgJGFydGlzdF9zb25nc19uID0gZXhwbG9kZSgnIicsIGV4cGxvZGUoJyI+TGFzdCcsICRhcnRpc3Rfc29uZ3NfbilbMF0pOw0KICAgICAgICAkYXJ0aXN0X3NvbmdzX24gPSAoaW50KWVuZCgkYXJ0aXN0X3NvbmdzX24pOw0KICAgICAgfSBlbHNlIGlmIChzdHJwb3MoJGFydGlzdF9zb25nc19uLCAnPGxpIGNsYXNzPSJuZXh0Ij4nKSAhPT0gZmFsc2UpIHsNCiAgICAgICAgJGFydGlzdF9zb25nc19uID0gZXhwbG9kZSgnPGxpPjxhIGhyZWY9IicsIGV4cGxvZGUoJzxsaSBjbGFzcz0ibmV4dCI+JywgJGFydGlzdF9zb25nc19uKVswXSk7DQogICAgICAgICRhcnRpc3Rfc29uZ3NfbiA9IChpbnQpZXhwbG9kZSgnPC9hPicsIGV4cGxvZGUoJyI+JywgZW5kKCRhcnRpc3Rfc29uZ3NfbikpWzFdKVswXTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgICRhcnRpc3Rfc29uZ3NfbiA9IDE7DQogICAgICB9DQogICAgICBmb3JlYWNoIChyYW5nZSgxLCAkYXJ0aXN0X3NvbmdzX24pIGFzICRhcnRpc3Rfc29uZ19uKSB7DQogICAgICAgIGFycmF5X3B1c2goJGFydGlzdF9zb25nc19wYWdlcywgZXhwbG9kZSgnLmh0bWwnLCAkYXJ0aXN0X3BhZ2UpWzBdLiIvc29uZ3MvcGFnZS0iLiRhcnRpc3Rfc29uZ19uLiIuaHRtbCIpOw0KICAgICAgfQ0KICAgIH0NCg0KICAgICRzb25nX3VybHMgPSBbXTsNCiAgICAkc29uZ191cmwgPSAkc29uZ19pZCA9ICIiOw0KICAgIGZvcmVhY2ggKCRhcnRpc3Rfc29uZ3NfcGFnZXMgYXMgJGFydGlzdF9zb25nc19wYWdlKSB7DQogICAgICAkYXJ0aXN0X3NvbmdzX3BhZ2VfciA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRhcnRpc3Rfc29uZ3NfcGFnZSk7DQogICAgICAkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbXMgPSBleHBsb2RlKCc8ZGl2IGNsYXNzPSJpdGVtIj4nLCBleHBsb2RlKCc8ZGl2IGlkPSJwYWdpbmF0aW9uIj4nLCBleHBsb2RlKCc8ZGl2IGNsYXNzPSJ0eXBlLWxpc3QgIHR5cGUtY29sLWxpc3Qgc29uZy1saXN0IHNvbmctY2F0ZS1saXN0IGFydGlzdC1zb25nLWxpc3QiPicsICRhcnRpc3Rfc29uZ3NfcGFnZV9yKVsxXSlbMF0pOw0KICAgICAgYXJyYXlfc2hpZnQoJGFydGlzdF9zb25nc19wYWdlX2l0ZW1zKTsNCiAgICAgIGZvcmVhY2ggKCRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtcyBhcyAkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbSkgew0KICAgICAgICAkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbV9uYW1lID0gdHJpbShleHBsb2RlKCciJywgZXhwbG9kZSgnIiB0aXRsZT0iJywgJGFydGlzdF9zb25nc19wYWdlX2l0ZW0pWzFdKVswXSk7DQogICAgICAgIGlmIChzdHJ0b2xvd2VyKCRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtX25hbWUpID09IHN0cnRvbG93ZXIoJF9HRVRbJ3RpdGxlJ10pKSB7DQogICAgICAgICAgJHNvbmdfdXJsID0gZXhwbG9kZSgnPGEgaHJlZj0iJywgZXhwbG9kZSgnIiB0aXRsZT0iJywgJGFydGlzdF9zb25nc19wYWdlX2l0ZW0pWzBdKTsNCiAgICAgICAgICAkc29uZ191cmwgPSBlbmQoJHNvbmdfdXJsKTsNCiAgICAgICAgICBhcnJheV9wdXNoKCRzb25nX3VybHMsICRzb25nX3VybCk7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIGlmIChjb3VudCgkc29uZ191cmxzKSA+IDApIHsgYnJlYWs7IH0NCiAgICB9DQogICAgZm9yZWFjaCAoJGFydGlzdF9zb25nc19wYWdlcyBhcyAkYXJ0aXN0X3NvbmdzX3BhZ2UpIHsNCiAgICAgICRhcnRpc3Rfc29uZ3NfcGFnZV9yID0gZmlsZV9nZXRfY29udGVudHMoJGFydGlzdF9zb25nc19wYWdlKTsNCiAgICAgICRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtcyA9IGV4cGxvZGUoJzxkaXYgY2xhc3M9Iml0ZW0iPicsIGV4cGxvZGUoJzxkaXYgaWQ9InBhZ2luYXRpb24iPicsIGV4cGxvZGUoJzxkaXYgY2xhc3M9InR5cGUtbGlzdCAgdHlwZS1jb2wtbGlzdCBzb25nLWxpc3Qgc29uZy1jYXRlLWxpc3QgYXJ0aXN0LXNvbmctbGlzdCI+JywgJGFydGlzdF9zb25nc19wYWdlX3IpWzFdKVswXSk7DQogICAgICBhcnJheV9zaGlmdCgkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbXMpOw0KICAgICAgZm9yZWFjaCAoJGFydGlzdF9zb25nc19wYWdlX2l0ZW1zIGFzICRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtKSB7DQogICAgICAgICRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtX25hbWUgPSB0cmltKGV4cGxvZGUoJyInLCBleHBsb2RlKCciIHRpdGxlPSInLCAkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbSlbMV0pWzBdKTsNCiAgICAgICAgaWYgKHN0cnBvcyhzdHJ0b2xvd2VyKCRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtX25hbWUpLCBzdHJ0b2xvd2VyKCRfR0VUWyd0aXRsZSddKSkgIT09IGZhbHNlKSB7DQogICAgICAgICAgaWYgKHN0cnBvcyhzdHJ0b2xvd2VyKCRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtX25hbWUpLCAibWl4IikgPT09IGZhbHNlKSB7DQogICAgICAgICAgICAkc29uZ191cmwgPSBleHBsb2RlKCc8YSBocmVmPSInLCBleHBsb2RlKCciIHRpdGxlPSInLCAkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbSlbMF0pOw0KICAgICAgICAgICAgJHNvbmdfdXJsID0gZW5kKCRzb25nX3VybCk7DQogICAgICAgICAgICBpZiAoaW5fYXJyYXkoJHNvbmdfdXJsLCAkc29uZ191cmxzKSAhPT0gdHJ1ZSkgew0KICAgICAgICAgICAgICBhcnJheV9wdXNoKCRzb25nX3VybHMsICRzb25nX3VybCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgICBpZiAoY291bnQoJHNvbmdfdXJscykgPiAwKSB7IGJyZWFrOyB9DQogICAgfQ0KICAgIGlmIChjb3VudCgkc29uZ191cmxzKSA8IDEpIHsNCiAgICAgIGZvcmVhY2ggKCRhcnRpc3Rfc29uZ3NfcGFnZXMgYXMgJGFydGlzdF9zb25nc19wYWdlKSB7DQogICAgICAgICRhcnRpc3Rfc29uZ3NfcGFnZV9yID0gZmlsZV9nZXRfY29udGVudHMoJGFydGlzdF9zb25nc19wYWdlKTsNCiAgICAgICAgJGFydGlzdF9zb25nc19wYWdlX2l0ZW1zID0gZXhwbG9kZSgnPGRpdiBjbGFzcz0iaXRlbSI+JywgZXhwbG9kZSgnPGRpdiBpZD0icGFnaW5hdGlvbiI+JywgZXhwbG9kZSgnPGRpdiBjbGFzcz0idHlwZS1saXN0ICB0eXBlLWNvbC1saXN0IHNvbmctbGlzdCBzb25nLWNhdGUtbGlzdCBhcnRpc3Qtc29uZy1saXN0Ij4nLCAkYXJ0aXN0X3NvbmdzX3BhZ2VfcilbMV0pWzBdKTsNCiAgICAgICAgYXJyYXlfc2hpZnQoJGFydGlzdF9zb25nc19wYWdlX2l0ZW1zKTsNCiAgICAgICAgZm9yZWFjaCAoJGFydGlzdF9zb25nc19wYWdlX2l0ZW1zIGFzICRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtKSB7DQogICAgICAgICAgJGFydGlzdF9zb25nc19wYWdlX2l0ZW1fbmFtZSA9IHRyaW0oZXhwbG9kZSgnIicsIGV4cGxvZGUoJyIgdGl0bGU9IicsICRhcnRpc3Rfc29uZ3NfcGFnZV9pdGVtKVsxXSlbMF0pOw0KICAgICAgICAgIGlmIChzdHJwb3Moc3RydG9sb3dlcigkYXJ0aXN0X3NvbmdzX3BhZ2VfaXRlbV9uYW1lKSwgc3RydG9sb3dlcigkX0dFVFsndGl0bGUnXSkpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgJHNvbmdfdXJsID0gZXhwbG9kZSgnPGEgaHJlZj0iJywgZXhwbG9kZSgnIiB0aXRsZT0iJywgJGFydGlzdF9zb25nc19wYWdlX2l0ZW0pWzBdKTsNCiAgICAgICAgICAgICRzb25nX3VybCA9IGVuZCgkc29uZ191cmwpOw0KICAgICAgICAgICAgaWYgKGluX2FycmF5KCRzb25nX3VybCwgJHNvbmdfdXJscykgIT09IHRydWUpIHsNCiAgICAgICAgICAgICAgYXJyYXlfcHVzaCgkc29uZ191cmxzLCAkc29uZ191cmwpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZiAoY291bnQoJHNvbmdfdXJscykgPiAwKSB7IGJyZWFrOyB9DQogICAgICB9DQogICAgfQ0KICB9IGVsc2Ugew0KICAgICRzZWFyY2hfciA9IGZpbGVfZ2V0X2NvbnRlbnRzKCJodHRwOi8vMTIzbXVzaWMudG8vc2VhcmNoL3NvbmdzLyIuc3RyX3JlcGxhY2UoIiAiLCAiKyIsICRfR0VUWyJ0aXRsZSJdKS4iLmh0bWwiKTsNCiAgICAkc2VhcmNoX3NvbmdzID0gZXhwbG9kZSgnPGEgZGF0YS1zb25nLWlkPSInLCBleHBsb2RlKCc8ZGl2IGlkPSJwYWdpbmF0aW9uIj4nLCBleHBsb2RlKCI8IS0tU29uZ3MgbGlzdC0tPiIsICRzZWFyY2hfcilbMV0pWzBdKTsNCiAgICBhcnJheV9wb3AoJHNlYXJjaF9zb25ncyk7DQogICAgZm9yZWFjaCAoJHNlYXJjaF9zb25ncyBhcyAkc2VhcmNoX3NvbmcpIHsNCiAgICAgICRzZWFyY2hfc29uZ19uYW1lID0gZXhwbG9kZSgnPC9hPjwvaDM+JywgZXhwbG9kZSgnIj4nLCBleHBsb2RlKCc8ZGl2IGNsYXNzPSJpdGVtLWNhcHRpb24iPicsICRzZWFyY2hfc29uZylbMV0pWzFdKVswXTsNCiAgICAgICRzZWFyY2hfc29uZ19hcnRpc3RzID0gZXhwbG9kZSgnPGEgaHJlZj0iJywgZXhwbG9kZSgnPC9zcGFuPicsIGV4cGxvZGUoJzxzcGFuIGNsYXNzPSJzaW5nZXIiPicsICRzZWFyY2hfc29uZylbMV0pWzBdKTsNCiAgICAgIGFycmF5X3NoaWZ0KCRzZWFyY2hfc29uZ19hcnRpc3RzKTsNCiAgICAgIGZvcmVhY2ggKCRzZWFyY2hfc29uZ19hcnRpc3RzIGFzICRzZWFyY2hfc29uZ19hcnRpc3RfKSB7DQogICAgICAgICRzZWFyY2hfc29uZ19hcnRpc3QgPSBleHBsb2RlKCc8L2E+JywgZXhwbG9kZSgnIj4nLCAkc2VhcmNoX3NvbmdfYXJ0aXN0XylbMV0pWzBdOw0KICAgICAgICBpZiAoc3RydG9sb3dlcigkc2VhcmNoX3NvbmdfYXJ0aXN0KSA9PSBzdHJ0b2xvd2VyKCRfR0VUWydhcnRpc3QnXSkpIHsNCiAgICAgICAgICAkc29uZ191cmwgPSBleHBsb2RlKCciJywgZXhwbG9kZSgnPGEgaHJlZj0iJywgZXhwbG9kZSgnPGRpdiBjbGFzcz0iaXRlbS1jYXB0aW9uIj4nLCAkc2VhcmNoX3NvbmcpWzFdKVsxXSlbMF07DQogICAgICAgICAgYXJyYXlfcHVzaCgkc29uZ191cmxzLCAkc29uZ191cmwpOw0KICAgICAgICB9DQogICAgICB9DQogICAgICBpZiAoY291bnQoJHNvbmdfdXJscykgPiAwKSB7IGJyZWFrOyB9DQogICAgfQ0KICB9DQogIA0KICBmb3JlYWNoICgkc29uZ191cmxzIGFzICRzb25nX3VybCkgew0KICAgICRzb25nX2lkID0gZXhwbG9kZSgnLScsIGV4cGxvZGUoJy5odG1sJywgJHNvbmdfdXJsKVswXSk7DQogICAgJHNvbmdfaWQgPSBlbmQoJHNvbmdfaWQpOw0KICAgICRzb25nX2FqYXhfdXJsID0gImh0dHA6Ly8xMjNtdXNpYy50by9hamF4L3Nvbmcvc291cmNlcy8iLiRzb25nX2lkOw0KDQogICAgJHNvdXJjZV91cmwgPSAiIjsNCiAgICAkc291cmNlX3VybHNfMTI4ID0gJHNvdXJjZV91cmxzXzMyMCA9IFtdOw0KICAgIGlmICgkc29uZ19pZCAhPSAiIikgew0KICAgICAgJHNvbmdfYWpheF91cmxfciA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRzb25nX2FqYXhfdXJsKTsNCiAgICAgICRzb25nX2FqYXhfanNvbiA9IGpzb25fZGVjb2RlKCRzb25nX2FqYXhfdXJsX3IsIHRydWUpOw0KICAgICAgZm9yZWFjaCAoJHNvbmdfYWpheF9qc29uWydzb3VyY2VzJ10gYXMgJHNvbmdfYWpheF9zb3VyY2UpIHsNCiAgICAgICAgaWYgKGlzc2V0KCRzb25nX2FqYXhfc291cmNlWydzZXJ2ZXInXSkpIHsNCiAgICAgICAgICBpZiAoJHNvbmdfYWpheF9zb3VyY2VbJ3NlcnZlciddID09ICJ6aW5nX2RpcmVjdCIpIHsNCiAgICAgICAgICAgIGlmICgkc29uZ19hamF4X3NvdXJjZVsnbGlua18zMjAnXSAhPSAiIikgew0KICAgICAgICAgICAgICAkc291cmNlX3VybCA9ICRzb25nX2FqYXhfc291cmNlWydsaW5rXzMyMCddOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgJHNvdXJjZV91cmwgPSAkc29uZ19hamF4X3NvdXJjZVsnbGlua18xMjgnXTsNCiAgICAgICAgICAgIH0gDQogICAgICAgICAgfSBlbHNlIGlmICgkc29uZ19hamF4X3NvdXJjZVsnc2VydmVyJ10gPT0gInppbmciKSB7DQogICAgICAgICAgICBpZiAoJHNvbmdfYWpheF9zb3VyY2VbJ2xpbmtfMzIwJ10gIT0gIiIpIHsNCiAgICAgICAgICAgICAgJHNvdXJjZV91cmwgPSAkc29uZ19hamF4X3NvdXJjZVsnbGlua18zMjAnXTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICRzb3VyY2VfdXJsID0gJHNvbmdfYWpheF9zb3VyY2VbJ2xpbmtfMTI4J107DQogICAgICAgICAgICB9DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGlmICgkc29uZ19hamF4X3NvdXJjZVsnbGlua18zMjAnXSAhPSAiIikgew0KICAgICAgICAgICAgICBhcnJheV9wdXNoKCRzb3VyY2VfdXJsc18zMjAsICRzb25nX2FqYXhfc291cmNlWydsaW5rXzMyMCddKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIGFycmF5X3B1c2goJHNvdXJjZV91cmxzXzEyOCwgJHNvbmdfYWpheF9zb3VyY2VbJ2xpbmtfMTI4J10pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgaWYgKCRzb3VyY2VfdXJsID09ICIiKSB7DQogICAgICAgIGlmIChjb3VudCgkc291cmNlX3VybHNfMzIwKSA+IDApIHsNCiAgICAgICAgICAkc291cmNlX3VybCA9ICRzb3VyY2VfdXJsc18zMjBbMF07DQogICAgICAgIH0gZWxzZSBpZiAoY291bnQoJHNvdXJjZV91cmxzXzEyOCkgPiAwKSB7DQogICAgICAgICAgJHNvdXJjZV91cmwgPSAkc291cmNlX3VybHNfMTI4WzBdOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICRqc29uLT5lcnJvciA9ICJTb3VyY2UgTm90IEZvdW5kLiI7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIGlmICgkc291cmNlX3VybCAhPSAiIikgew0KICAgICAgICAkbXAzX2xpbmsgPSBleHBsb2RlKCI/IiwgJHNvdXJjZV91cmwpOw0KICAgICAgICAkbXAzX2xpbmsgPSBlbmQoJG1wM19saW5rKTsNCiAgICAgICAgaWYgKHN1YnN0cigkbXAzX2xpbmssIC00KSAhPSAiLm1wMyIpIHsNCiAgICAgICAgICAkY2ggPSBjdXJsX2luaXQoJHNvdXJjZV91cmwpOw0KICAgICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7DQogICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0hFQURFUiwgMCk7DQogICAgICAgICAgJGhlYWRlcl9zaXplID0gY3VybF9nZXRpbmZvKCRjaCwgQ1VSTElORk9fSEVBREVSX1NJWkUpOw0KICAgICAgICAgIGZ1bmN0aW9uIEhhbmRsZUhlYWRlckxpbmUoJGN1cmwsICRoZWFkZXJfbGluZSkgew0KICAgICAgICAgICAgZ2xvYmFsICRqc29uOw0KICAgICAgICAgICAgaWYgKHN0cnBvcygkaGVhZGVyX2xpbmUsICJMb2NhdGlvbjogIikgIT09IGZhbHNlKSB7DQogICAgICAgICAgICAgICRqc29uLT5kYXRhLT5saW5rID0gdHJpbShleHBsb2RlKCJMb2NhdGlvbjogIiwgJGhlYWRlcl9saW5lKVsxXSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gc3RybGVuKCRoZWFkZXJfbGluZSk7DQogICAgICAgICAgfQ0KICAgICAgICAgIGlmICgkanNvbi0+ZGF0YS0+bGluayA9PSAiIikgew0KICAgICAgICAgICAgJGpzb24tPmRhdGEtPmxpbmsgPSAkc291cmNlX3VybDsNCiAgICAgICAgICB9DQogICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0hFQURFUkZVTkNUSU9OLCAiSGFuZGxlSGVhZGVyTGluZSIpOw0KICAgICAgICAgICRkYXRhID0gY3VybF9leGVjKCRjaCk7DQogICAgICAgICAgY3VybF9jbG9zZSgkY2gpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICRqc29uLT5kYXRhLT5saW5rID0gJHNvdXJjZV91cmw7DQogICAgICAgIH0NCg0KICAgICAgICAkaWQzX2RhdGFfciA9IGZpbGVfZ2V0X2NvbnRlbnRzKCJodHRwczovL2FwaS5zcG90aWZ5LmNvbS92MS9zZWFyY2g/Ii5odHRwX2J1aWxkX3F1ZXJ5KGFycmF5KCJ0eXBlIj0+InRyYWNrIiwgInEiPT4kX0dFVFsndGl0bGUnXS4iICIuJF9HRVRbJ2FydGlzdCddKSwnJywnJicpKTsNCiAgICAgICAgJGlkM19kYXRhX2pzb24gPSBqc29uX2RlY29kZSgkaWQzX2RhdGFfciwgdHJ1ZSk7DQogICAgICAgICRpZDNfZGF0YV90cmFjayA9IGpzb25fZGVjb2RlKCJ7fSIpOw0KICAgICAgICBmb3JlYWNoICgkaWQzX2RhdGFfanNvblsndHJhY2tzJ11bJ2l0ZW1zJ10gYXMgJGlkM19kYXRhX2l0ZW0pIHsNCiAgICAgICAgICBpZiAoc3RydG9sb3dlcigkaWQzX2RhdGFfaXRlbVsnbmFtZSddKSA9PSBzdHJ0b2xvd2VyKCRfR0VUWyd0aXRsZSddKSkgew0KICAgICAgICAgICAgJGZvdW5kX2FydGlzdCA9IGZhbHNlOw0KICAgICAgICAgICAgZm9yZWFjaCAoJGlkM19kYXRhX2l0ZW1bJ2FydGlzdHMnXSBhcyAkaWQzX2RhdGFfaXRlbV9hcnRpc3QpIHsNCiAgICAgICAgICAgICAgaWYgKHN0cnRvbG93ZXIoJGlkM19kYXRhX2l0ZW1fYXJ0aXN0WyduYW1lJ10pID09IHN0cnRvbG93ZXIoJF9HRVRbJ2FydGlzdCddKSkgew0KICAgICAgICAgICAgICAgICRmb3VuZF9hcnRpc3QgPSB0cnVlOw0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAoJGZvdW5kX2FydGlzdCkgew0KICAgICAgICAgICAgICAkaWQzX2RhdGFfdHJhY2sgPSAkaWQzX2RhdGFfaXRlbTsNCiAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmIChlbXB0eSgoYXJyYXkpICRpZDNfZGF0YV90cmFjaykpIHsNCiAgICAgICAgICAkaWQzX2RhdGFfdHJhY2sgPSAkaWQzX2RhdGFfanNvblsndHJhY2tzJ11bJ2l0ZW1zJ11bMF07DQogICAgICAgIH0NCg0KICAgICAgICAkdHJhY2tfdGl0bGUgPSAkaWQzX2RhdGFfdHJhY2tbJ25hbWUnXTsNCiAgICAgICAgJGFsYnVtX3RpdGxlID0gJGlkM19kYXRhX3RyYWNrWydhbGJ1bSddWyduYW1lJ107DQogICAgICAgICRhbGJ1bV9hcnRpc3RzID0gJGlkM19kYXRhX3RyYWNrWydhbGJ1bSddWydhcnRpc3RzJ11bMF1bJ25hbWUnXTsNCiAgICAgICAgJHRyYWNrX2FydGlzdHMgPSAiIjsNCiAgICAgICAgJHRyYWNrX2FydGlzdHNfZnQgPSBmYWxzZTsNCiAgICAgICAgZm9yZWFjaCAoJGlkM19kYXRhX3RyYWNrWydhcnRpc3RzJ10gYXMgJGlkM19kYXRhX3RyYWNrX2FsYnVtX2FydGlzdCkgew0KICAgICAgICAgIGlmICgkdHJhY2tfYXJ0aXN0cyA9PSAiIikgew0KICAgICAgICAgICAgJHRyYWNrX2FydGlzdHMgPSAkaWQzX2RhdGFfdHJhY2tfYWxidW1fYXJ0aXN0WyduYW1lJ107DQogICAgICAgICAgfSBlbHNlIGlmICgkdHJhY2tfYXJ0aXN0c19mdCkgew0KICAgICAgICAgICAgJHRyYWNrX2FydGlzdHMgPSAkdHJhY2tfYXJ0aXN0cyAuICIgJiAiIC4gJGlkM19kYXRhX3RyYWNrX2FsYnVtX2FydGlzdFsnbmFtZSddOw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkdHJhY2tfYXJ0aXN0cyA9ICR0cmFja19hcnRpc3RzIC4gIiBmdC4gIiAuICRpZDNfZGF0YV90cmFja19hbGJ1bV9hcnRpc3RbJ25hbWUnXTsNCiAgICAgICAgICAgICR0cmFja19hcnRpc3RzX2Z0ID0gdHJ1ZTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgJGFsYnVtX2NvdmVyID0gJGlkM19kYXRhX3RyYWNrWydhbGJ1bSddWydpbWFnZXMnXVswXVsndXJsJ107DQoNCiAgICAgICAgJGpzb24tPmVycm9yID0gIiI7DQogICAgICAgICRqc29uLT5kYXRhLT5uYW1lID0gJHRyYWNrX3RpdGxlOw0KICAgICAgICAkanNvbi0+ZGF0YS0+YXJ0aXN0cyA9ICR0cmFja19hcnRpc3RzOw0KICAgICAgICAkanNvbi0+ZGF0YS0+YWxidW1fbmFtZSA9ICRhbGJ1bV90aXRsZTsNCiAgICAgICAgJGpzb24tPmRhdGEtPmFsYnVtX2FydGlzdCA9ICRhbGJ1bV9hcnRpc3RzOw0KICAgICAgICAkanNvbi0+ZGF0YS0+YWxidW1fY292ZXIgPSAkYWxidW1fY292ZXI7DQogICAgICAgICRiYXNlX3NvdXJjZV9pZCA9IGV4cGxvZGUoIi8iLCAkc29uZ19hamF4X3VybCk7DQogICAgICAgICRqc29uLT5kYXRhLT5iYXNlX3NvdXJjZSA9IGJhc2U2NF9lbmNvZGUoZW5kKCRiYXNlX3NvdXJjZV9pZCkpOw0KICAgICAgICBicmVhazsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgICRqc29uLT5lcnJvciA9ICJTb3VyY2UgTm90IEZvdW5kLiI7DQogICAgICB9DQogICAgfSBlbHNlIHsNCiAgICAgICRqc29uLT5lcnJvciA9ICJBcnRpc3QvU29uZyBOb3QgRm91bmQuIjsNCiAgICB9DQogIH0NCiAgaWYgKCRqc29uLT5kYXRhLT5iYXNlX3NvdXJjZSA9PSAiIikgew0KICAgICRqc29uLT5lcnJvciA9ICJBcnRpc3QvU29uZyBOb3QgRm91bmQuIjsNCiAgfQ0KfSBlbHNlIHsNCiAgJGpzb24tPmVycm9yID0gIkludmFsaWQgUmVxdWVzdC4iOw0KfQ0KDQpwcmludCBqc29uX2VuY29kZSgkanNvbiwgSlNPTl9QUkVUVFlfUFJJTlQpOw0KPz4=